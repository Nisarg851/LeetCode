// problem url: https://www.codingninjas.com/codestudio/problems/min-heap_4691801?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=0
// mode: Medium
// Heap

#include<bits/stdc++.h>
class MinHeap{
    vector<int> heap;
    
    void heapifyUP(int index){
        if(index==0)
            return;
        int rootVal = heap[(index-1)/2];
        if(rootVal>heap[index]){
            rootVal = heap[index];
            heap[index] = heap[(index-1)/2];
            heap[(index-1)/2] = rootVal;
            heapifyUP((index-1)/2);
        }
    }
    
    void heapifyDown(int index){
        int smallestNumIndex = index;
        int leftChildIndex = 2*index+1;
        int rightChildIndex = 2*index+2;
        
        if(leftChildIndex > heap.size() && rightChildIndex > heap.size()){
            heap.erase(heap.begin()+index);
            return;
        }
        
        if(leftChildIndex < heap.size())
            smallestNumIndex = heap[smallestNumIndex]>heap[leftChildIndex] ? leftChildIndex : smallestNumIndex;
        
        if(rightChildIndex < heap.size())
            smallestNumIndex = heap[smallestNumIndex]>heap[rightChildIndex] ? rightChildIndex : smallestNumIndex;
        
        if(smallestNumIndex != index){
            int temp = heap[smallestNumIndex];
            heap[smallestNumIndex] = heap[index];
            heap[index] = temp;
            heapifyDown(smallestNumIndex);
        }
    }
    
    public:
    void printHeap(){
        for(int num: heap)
            cout<<num<<' ';
        cout<<endl;
    }
    
    void insert(int val){
        heap.push_back(val);
        heapifyUP(heap.size()-1);
    }
    
    int getMinVal(){
        int rootVal = heap[0];
        heap[0] = INT_MAX;
        heapifyDown(0);
        return rootVal;
    }
};

vector<int> minHeap(int n, vector<vector<int>>& q) {
    vector<int> ans;
    MinHeap heap;
    for(int i=0; i<n; i++){
        if(q[i][0]==0)
            heap.insert(q[i][1]);
        else
            ans.push_back(heap.getMinVal());
    }
    return ans;
}
