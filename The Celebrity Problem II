// problem url: https://www.codingninjas.com/codestudio/problems/the-celebrity-problem_982769?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=0
// mode: Medium
// Stack

//########################################################## Sol1 : Using Stack #########################################################################################
/*
    This is signature of helper function 'knows'.
    You should not implement it, or speculate about its implementation.

    bool knows(int A, int B); 
    Function 'knows(A, B)' will returns "true" if the person having
    id 'A' know the person having id 'B' in the party, "false" otherwise.
*/

#include <bits/stdc++.h>
int findCelebrity(int n){
    stack<int>s;
    for(int i=0;i<n;i++)
        s.push(i);

    while(s.size()>1){
        int val1=s.top();
        s.pop();
        int val2=s.top();
        s.pop();
        knows(val1,val2)?
            s.push(val2):knows(val2,val1)?
                s.push(val1)
                :void(0);
    }

    if(s.empty())
        return -1;
    
    int val=s.top();
    for(int i=0;i<n;i++)
        if(i!=val && (knows(val,i) || !knows(i,val)))
            return -1;
    
    return val;
}

//########################################################## Sol2: Same as Stack Sol intuition but without using stack ################################################################

#include <bits/stdc++.h>
int findCelebrity(int n) {
    int a = 0, b = 1;
    while(b<n){
        bool aKnowsb = knows(a,b);
        bool bKnowsa = knows(b,a);
        if((aKnowsb && bKnowsa) || (!aKnowsb && !bKnowsa)){
            a = b+1;
            b = a+1;
        }else if(aKnowsb){
            a = b;
            ++b;
        }else{
            ++b;
        }
    }
    if(a>=n)
        return -1;
    for(int i=0; i<n; i++){
        if(i!=a && (knows(a,i) || !knows(i,a)))
            return -1;
    }
    return a;
}
