// problem url: https://leetcode.com/problems/reverse-pairs/
// mode: Hard
// MergeSort intuition

class Solution {
public:
    int reversePairs(vector<int>& nums) {
        return mergeSort(nums, 0, nums.size()-1);
    }
    
    int mergeSort(vector<int>& nums, int low, int high){
        if(low==high)
            return 0;
        int mid = (high - low)/2 + low;
        int pairs = mergeSort(nums, low, mid);
        pairs += mergeSort(nums, mid+1, high);
        
        pairs += merge(nums, low, mid, high);
        
        return pairs;
    }
    
    int merge(vector<int>&nums, int low, int mid, int high){
        int pairs = 0;
        int j = mid+1;
        int i = low;
        for(i=low; i<=mid; i++){
            while(j<=high && nums[i]>2LL*nums[j])
                ++j;
            pairs += j-mid-1;
        }
        
        vector<int> temp;
        i = low; j = mid+1;
        while(i<=mid && j<=high){
            if(nums[i]<nums[j])
                temp.push_back(nums[i++]);
            else
                temp.push_back(nums[j++]);
        }
        
        while(i<=mid)
            temp.push_back(nums[i++]);
        
        while(j<=high)
            temp.push_back(nums[j++]);
        
        for(int num: temp)
            nums[low++] = num;
        
        return pairs;
    }
};
