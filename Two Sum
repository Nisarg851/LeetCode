// problem url: https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
// mode: Easy
// 2-Pointer Method
// Optimal-solution based on time-complexity would be using maps/hash-tables

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        vector<int> temp = nums;
        stable_sort(temp.begin(), temp.end());
        
        int i=0, j=temp.size()-1;
        while(i<j){
            if(temp[i]+temp[j]==target)
                break;
            if(temp[i]+temp[j]>target)
                --j;
            else
                ++i;
        }
        
        for(int num=0; num<nums.size(); num++){
            if(nums[num]==temp[i])
                ans.push_back(num);
            else if(nums[num]==temp[j])
                ans.push_back(num);
            if(ans.size()==2)
                break;
        }
        
        return ans;
    }
};
