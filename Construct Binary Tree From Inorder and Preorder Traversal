// problem url: https://www.codingninjas.com/codestudio/problems/920539?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=0
// mode: Easy
// Construct Binary Tree From Inorder and Preorder Traversal

#include <bits/stdc++.h>
TreeNode<int> *buildBinaryTree(int index, vector<int> &preorder, int ilb, int irb, unordered_map<int,int> &indexOfNode){
    TreeNode<int> *root = new TreeNode<int>(preorder[index]);
    int indexOfRoot = indexOfNode[preorder[index]];
    int nodesInLeftSubTree = indexOfRoot - ilb;
    int nodesInRightSubTree = irb - indexOfRoot;
    
    root->left = nodesInLeftSubTree ?
                      buildBinaryTree(index+1, preorder, ilb, indexOfRoot-1, indexOfNode) 
                    : nullptr;
    
    root->right = nodesInRightSubTree ?
                      buildBinaryTree(index+nodesInLeftSubTree+1, preorder, indexOfRoot+1, irb, indexOfNode)
                    : nullptr;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder){
    if(inorder.size()==0)    return nullptr;
    
    unordered_map<int,int> indexOfNode;
    for(int i=0; i<inorder.size(); i++)
        indexOfNode[inorder[i]] = i;
    
    return buildBinaryTree(0, preorder, 0, inorder.size()-1, indexOfNode);
}
